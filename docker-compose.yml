version: "3.6"
services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${PORT}:${PORT}
    restart: on-failure
    volumes:
      - api:/usr/src/app/
    depends_on:
      - postgres
    networks:
      - fullstack

  postgres:
    image: postgres
    restart: on-failure
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      DATABASE_HOST: ${DB_HOST}
    volumes:
      - "xpense_postgresql:/var/lib/postgresql/data"
    ports:
      - "5432:5432"
    networks:
      - fullstack

  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
    depends_on:
      - app
      - postgres
    networks:
      - fullstack

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/html --email desi.belokonska@gmail.com --agree-tos --no-eff-email --force-renewal -d xpense.belokonska.com

volumes:
  api:
  xpense_postgresql:
  certbot-etc:
  certbot-var:
  web-root:
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: /home/xpense/api/dhparam/
      o: bind

# Networks to be created to facilitate communication between containers
networks:
  fullstack:
    driver: bridge
